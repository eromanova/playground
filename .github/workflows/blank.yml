name: CI
on:
  pull_request_target:
    types:
      - labeled
      - opened
      - synchronize
      - reopened
    branches:
      - main

jobs:
  authorize:
    environment:
      ${{ github.event_name == 'pull_request_target' &&
      'external' || 'internal' }}
    runs-on: ubuntu-latest
    env:
      GH_TOKEN: ${{ github.token }}
    outputs:
      config: ${{ steps.get_config.outputs.config }}
      public_repo: ${{ steps.get_config.outputs.public_repo }}
    steps:
      - name: Get Testing Configuration
        id: get_config
        run: |
          config=$(gh api "/repos/${{ github.repository }}/actions/runs/${{ github.run_id }}/approvals" --jq '.[0] | .comment')
          if [ -z "$config" ]; then
            exit 0
          fi

          echo "Provided testing configuration:"
          echo "$config"
          if ! echo "$config" | yq e > /dev/null; then
            echo "Invalid testing configuration provided"
            exit 1
          fi
          echo "config=$(echo -n "$config" | base64)" >> $GITHUB_OUTPUT
          if echo "$config" | yq e '... comments=""' | grep -q "hosted"; then
            echo "Hosted cluster deployment was triggered. Using public repository"
            echo "public_repo=true" >> $GITHUB_OUTPUT
          fi
  external_job:
#    needs: authorize
    runs-on: ubuntu-latest
    env:
      PUBLIC_REPO:
        ${{ contains( github.event.pull_request.labels.*.name, 'test e2e') &&
        contains(needs.authorize.result, 'success') && needs.authorize.outputs.public_repo == 'true' }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Load testing configuration
        if: ${{ needs.authorize.outputs.config != '' }}
        run: |
          echo -n "${{ needs.authorize.outputs.config }}" | base64 -d > config.yaml
          echo "Testing configuration was overwritten:"
          cat config.yaml
      - name: Test public env
        if: ${{ env.PUBLIC_REPO == 'true' }}
        run: |
          echo PUBLIC_REPO ${PUBLIC_REPO}
